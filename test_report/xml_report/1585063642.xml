<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="2" failures="0" hostname="liqingMacBook-Pro.local" name="pytest" skipped="0" tests="2" time="0.891" timestamp="2020-03-24T23:27:22.402813"><testcase classname="test_case.test_weather_condition.TestWeatherCondition" file="common/save_fail_picture.py" line="9" name="test_temp_equal" time="0.004"><error message="test setup failure">cls = &lt;class &apos;test_case.test_weather_condition.TestWeatherCondition&apos;&gt;

    @classmethod
    def setup_class(cls):
&gt;       cls.driver = BaseDriver().get_android_driver()

common/all_test.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common/basedriver.py:22: in get_android_driver
    driver = webdriver.Remote(&quot;http://127.0.0.1:&quot;+str(port_mes[&apos;port&apos;])+&quot;wd/hub&quot;, desired_cap)
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/appium/webdriver/webdriver.py:148: in __init__
    AppiumConnection(command_executor, keep_alive=keep_alive),
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py:111: in __init__
    port = parsed_url.port or None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ParseResult(scheme=&apos;http&apos;, netloc=&apos;127.0.0.1:4801wd&apos;, path=&apos;/hub&apos;, params=&apos;&apos;, query=&apos;&apos;, fragment=&apos;&apos;)

    @property
    def port(self):
        port = self._hostinfo[1]
        if port is not None:
&gt;           port = int(port, 10)
E           ValueError: invalid literal for int() with base 10: &apos;4801wd&apos;

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/parse.py:167: ValueError</error></testcase><testcase classname="test_case.test_weather_condition.TestWeatherCondition" file="test_case/test_weather_condition.py" line="14" name="test_weather_desc_equal" time="0.002"><error message="test setup failure">cls = &lt;class &apos;test_case.test_weather_condition.TestWeatherCondition&apos;&gt;

    @classmethod
    def setup_class(cls):
&gt;       cls.driver = BaseDriver().get_android_driver()

common/all_test.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common/basedriver.py:22: in get_android_driver
    driver = webdriver.Remote(&quot;http://127.0.0.1:&quot;+str(port_mes[&apos;port&apos;])+&quot;wd/hub&quot;, desired_cap)
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/appium/webdriver/webdriver.py:148: in __init__
    AppiumConnection(command_executor, keep_alive=keep_alive),
/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py:111: in __init__
    port = parsed_url.port or None
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ParseResult(scheme=&apos;http&apos;, netloc=&apos;127.0.0.1:4801wd&apos;, path=&apos;/hub&apos;, params=&apos;&apos;, query=&apos;&apos;, fragment=&apos;&apos;)

    @property
    def port(self):
        port = self._hostinfo[1]
        if port is not None:
&gt;           port = int(port, 10)
E           ValueError: invalid literal for int() with base 10: &apos;4801wd&apos;

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/parse.py:167: ValueError</error></testcase></testsuite></testsuites>